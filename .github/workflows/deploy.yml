name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  createrelease:
    name: createrelease
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +%F)"
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: Release ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Date File 
      run: echo "${{ steps.date.outputs.date }}" > date.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v4
      with:
        name: release_url
        path: release_url.txt
    - name: Save Date File for publish
      uses: actions/upload-artifact@v4
      with:
        name: date
        path: date.txt

  build_linux_environment:
    name: linux_environment
    needs: [createrelease]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment.yml
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        ./.ci_support/convert_linux.sh
        cat environment.yml
        python .ci_support/dryrun.py environment.yml env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-linux-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain

  build_macos_environment:
    name: macos_environment
    needs: [createrelease]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
        architecture: x64
        environment-file: .ci_support/environment.yml
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        ./.ci_support/convert_macos.sh
        cat environment.yml
        python .ci_support/dryrun.py environment.yml env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-osx-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain

  build_macarm_environment:
    name: macarm_environment
    needs: [createrelease]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment.yml
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        ./.ci_support/convert_macarm.sh
        cat environment.yml
        python .ci_support/dryrun.py environment.yml env-osx-arm-${{ steps.get_date_info.outputs.date }}.yml 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-osx-arm-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-osx-arm-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain

  build_windows_environment:
    name: windows_environment
    needs: [createrelease]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        $value = Get-Content release_url.txt
        echo "::set-output name=upload_url::$value"
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        $value = Get-Content date.txt
        echo "::set-output name=date::$value"
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment.yml
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 30
      run: |
        ./.ci_support/convert_windows.sh
        cat environment.yml
        python .ci_support/dryrun.py environment.yml env-win-x64-${{ steps.get_date_info.outputs.date }}.yml
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: env-win-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_name: env-win-x64-${{ steps.get_date_info.outputs.date }}.yml
        asset_content_type: text/plain

  build_linux_constructor:
    name: linux_constructor
    needs: [createrelease]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Build Constructor
      shell: bash -l {0}
      run: |
        conda install -y --name test -c conda-forge constructor
        mkdir build
        ./.ci_support/convert_linux.sh
        cat environment.yml
        constructor -v --output-dir=build --platform="linux-64" constructor
        mv ./build/shared-conda-environment-0.0.0-Linux-x86_64.sh ./build/$FILENAME
      env:
        FILENAME: conda-${{ steps.get_date_info.outputs.date }}-Linux-x86_64.sh
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./build/conda-${{ steps.get_date_info.outputs.date }}-Linux-x86_64.sh
        asset_name: conda-${{ steps.get_date_info.outputs.date }}-Linux-x86_64.sh
        asset_content_type: application/zip

  build_macos_constructor:
    name: macos_constructor
    needs: [createrelease]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
        architecture: x64
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Build Constructor
      shell: bash -l {0}
      run: |
        conda install -y --name test -c conda-forge constructor
        mkdir build
        ./.ci_support/convert_macos.sh
        cat environment.yml
        constructor -v --output-dir=build --platform="osx-64" constructor
        mv ./build/shared-conda-environment-0.0.0-MacOSX-x86_64.pkg ./build/$FILENAME
      env:
        FILENAME: conda-${{ steps.get_date_info.outputs.date }}-MacOSX-x86_64.pkg
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./build/conda-${{ steps.get_date_info.outputs.date }}-MacOSX-x86_64.pkg
        asset_name: conda-${{ steps.get_date_info.outputs.date }}-MacOSX-x86_64.pkg 
        asset_content_type: application/zip

  build_macarm_constructor:
    name: macarm_constructor
    needs: [createrelease]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        value=`cat date.txt`
        echo ::set-output name=date::$value
    - name: Build Constructor
      shell: bash -l {0}
      run: |
        conda install -y --name test -c conda-forge constructor
        mkdir build
        ./.ci_support/convert_macarm.sh
        cat environment.yml
        constructor -v --output-dir=build --platform="osx-arm64" constructor
        mv ./build/shared-conda-environment-0.0.0-MacOSX-arm64.pkg ./build/$FILENAME
      env:
        FILENAME: conda-${{ steps.get_date_info.outputs.date }}-MacOSX-arm64.pkg
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./build/conda-${{ steps.get_date_info.outputs.date }}-MacOSX-arm64.pkg
        asset_name: conda-${{ steps.get_date_info.outputs.date }}-MacOSX-arm64.pkg 
        asset_content_type: application/zip
  
  build_windows_constructor:
    name: windows_constructor
    needs: [createrelease]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        miniforge-version: latest
        condarc-file: .condarc
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Load Date File from release job
      uses: actions/download-artifact@v4
      with:
        name: date
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        $value = Get-Content release_url.txt
        echo "::set-output name=upload_url::$value"
    - name: Get Release File Name & Upload URL
      id: get_date_info
      run: |
        $value = Get-Content date.txt
        echo "::set-output name=date::$value"
    - name: Build Constructor
      shell: bash -l {0}
      run: |
        conda install -y --name test -c conda-forge constructor
        mkdir build
        ./.ci_support/convert_windows.sh
        cat environment.yml
        constructor -v --output-dir=build --platform="win-64" constructor
        mv ./build/shared-conda-environment-0.0.0-Windows-x86_64.exe ./build/$FILENAME
      env:
        FILENAME: conda-${{ steps.get_date_info.outputs.date }}-Windows-x86_64.exe
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./build/conda-${{ steps.get_date_info.outputs.date }}-Windows-x86_64.exe
        asset_name: conda-${{ steps.get_date_info.outputs.date }}-Windows-x86_64.exe
        asset_content_type: application/zip
